diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java
index d330f5ea8..7620e4a48 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java
@@ -38,7 +38,6 @@ import com.puppycrawl.tools.checkstyle.api.AbstractCheck;
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
 import com.puppycrawl.tools.checkstyle.api.FullIdent;
 import com.puppycrawl.tools.checkstyle.api.TokenTypes;
-import com.puppycrawl.tools.checkstyle.utils.CheckUtil;
 import com.puppycrawl.tools.checkstyle.utils.CommonUtil;
 import com.puppycrawl.tools.checkstyle.utils.TokenUtil;
 
@@ -376,10 +375,16 @@ public abstract class AbstractClassCouplingCheck extends AbstractCheck {
          * @param ast type to process.
          */
         public void visitType(DetailAST ast) {
-            final String fullTypeName = CheckUtil.createFullType(ast).getText();
-            final String trimmed = BRACKET_PATTERN
-                    .matcher(fullTypeName).replaceAll("");
-            addReferencedClassName(trimmed);
+            DetailAST child = ast.getFirstChild();
+            while (child != null) {
+                if (TokenUtil.isOfType(child, TokenTypes.IDENT, TokenTypes.DOT)) {
+                    final String fullTypeName = FullIdent.createFullIdent(child).getText();
+                    final String trimmed = BRACKET_PATTERN
+                            .matcher(fullTypeName).replaceAll("");
+                    addReferencedClassName(trimmed);
+                }
+                child = child.getNextSibling();
+            }
         }
 
         /**
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java b/src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java
index 9b8e76824..43593367c 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtil.java
@@ -28,7 +28,6 @@ import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
 import com.puppycrawl.tools.checkstyle.api.DetailAST;
-import com.puppycrawl.tools.checkstyle.api.FullIdent;
 import com.puppycrawl.tools.checkstyle.api.TokenTypes;
 import com.puppycrawl.tools.checkstyle.checks.naming.AccessModifierOption;
 
@@ -76,16 +75,6 @@ public final class CheckUtil {
     private CheckUtil() {
     }
 
-    /**
-     * Creates {@code FullIdent} for given type node.
-     *
-     * @param typeAST a type node.
-     * @return {@code FullIdent} for given type.
-     */
-    public static FullIdent createFullType(final DetailAST typeAST) {
-        return FullIdent.createFullIdent(typeAST.getFirstChild());
-    }
-
     /**
      * Tests whether a method definition AST defines an equals covariant.
      *
