diff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/RecordAsTypeIdentifierNotAllowed.java b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/RecordAsTypeIdentifierNotAllowed.java
new file mode 100644
index 000000000..5af8ddcc3
--- /dev/null
+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/RecordAsTypeIdentifierNotAllowed.java
@@ -0,0 +1,69 @@
+/*
+ * Copyright (C) 2021 The JavaParser Team.
+ * Copyright (C) 2021 Oliver Kopp
+ *
+ * This file is part of JavaParser.
+ *
+ * JavaParser can be used either under the terms of
+ * a) the GNU Lesser General Public License as published by
+ *     the Free Software Foundation, either version 3 of the License, or
+ *     (at your option) any later version.
+ * b) the terms of the Apache License
+ *
+ * You should have received a copy of both licenses in LICENCE.LGPL and
+ * LICENCE.APACHE. Please refer to those files for details.
+ *
+ * JavaParser is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Lesser General Public License for more details.
+ */
+
+package com.github.javaparser.ast.validator;
+
+import com.github.javaparser.ast.Node;
+import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
+import com.github.javaparser.ast.body.EnumDeclaration;
+import com.github.javaparser.ast.body.RecordDeclaration;
+import com.github.javaparser.ast.body.TypeDeclaration;
+import com.github.javaparser.ast.expr.Name;
+import com.github.javaparser.ast.expr.SimpleName;
+
+import static com.github.javaparser.utils.CodeGenerationUtils.f;
+
+/**
+ * Validates that "record" cannot be used as identifier for type declarations (e.g., classes, enums, and records).
+ * For details, see <a href="https://openjdk.java.net/jeps/395">JEP 395</a>
+ */
+public class RecordAsTypeIdentifierNotAllowed extends VisitorValidator {
+    private final String error;
+
+    public RecordAsTypeIdentifierNotAllowed() {
+        error = "'record' is a restricted identifier and cannot be used for type declarations";
+    }
+
+    @Override
+    public void visit(Name n, ProblemReporter arg) {
+        if (n.getIdentifier().equals("record") && !validUsage(n)) {
+            arg.report(n, error);
+        }
+        super.visit(n, arg);
+    }
+
+    @Override
+    public void visit(SimpleName n, ProblemReporter arg) {
+        if (n.getIdentifier().equals("record") && !validUsage(n)) {
+            arg.report(n, error);
+        }
+        super.visit(n, arg);
+    }
+
+    private boolean validUsage(Node node) {
+        if (!node.getParentNode().isPresent()) {
+            return true;
+        }
+        Node parent = node.getParentNode().get();
+
+        return !(parent instanceof TypeDeclaration);
+    }
+}
diff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/language_level_validations/Java14Validator.java b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/language_level_validations/Java14Validator.java
index b2557a911..ae104fbd0 100644
--- a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/language_level_validations/Java14Validator.java
+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/language_level_validations/Java14Validator.java
@@ -22,7 +22,7 @@
 package com.github.javaparser.ast.validator.language_level_validations;
 
 import com.github.javaparser.ast.body.RecordDeclaration;
-import com.github.javaparser.ast.validator.ReservedKeywordValidator;
+import com.github.javaparser.ast.validator.RecordAsTypeIdentifierNotAllowed;
 import com.github.javaparser.ast.validator.SingleNodeTypeValidator;
 import com.github.javaparser.ast.validator.Validator;
 import com.github.javaparser.ast.validator.language_level_validations.chunks.RecordDeclarationValidator;
@@ -45,7 +45,7 @@ public class Java14Validator extends Java13Validator {
      * </blockquote>
      * https://docs.oracle.com/javase/specs/jls/se15/preview/specs/records-jls.html#jls-3.8
      */
-    final Validator recordAsTypeIdentifierNotAllowed = new ReservedKeywordValidator("record");
+    final Validator recordAsTypeIdentifierNotAllowed = new RecordAsTypeIdentifierNotAllowed();
 
     final Validator recordDeclarationValidator = new SingleNodeTypeValidator<>(RecordDeclaration.class, new RecordDeclarationValidator());
 
diff --git a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/language_level_validations/Java16Validator.java b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/language_level_validations/Java16Validator.java
index cd5aebc78..83a0be6eb 100644
--- a/javaparser-core/src/main/java/com/github/javaparser/ast/validator/language_level_validations/Java16Validator.java
+++ b/javaparser-core/src/main/java/com/github/javaparser/ast/validator/language_level_validations/Java16Validator.java
@@ -21,11 +21,6 @@
 
 package com.github.javaparser.ast.validator.language_level_validations;
 
-import com.github.javaparser.ast.body.RecordDeclaration;
-import com.github.javaparser.ast.validator.SingleNodeTypeValidator;
-import com.github.javaparser.ast.validator.Validator;
-import com.github.javaparser.ast.validator.language_level_validations.chunks.RecordDeclarationValidator;
-
 /**
  * This validator validates according to Java 16 syntax rules.
  *
